#!/bin/bash

# Copyright 2024 Carnegie Mellon University.
# Released under a MIT (SEI)-style license, please see LICENSE.md in the project 
# root or contact permission@sei.cmu.edu for full terms.

encode_xor() {
    local str="$1"
    local key="$2"
    local encoded=""

    for (( i=0; i<${#str}; i++ )); do
        local current_char_decimal=$(printf '%d' "'${str:$i:1}")
        local xor_result=$(($current_char_decimal ^ $key))
        encoded="${encoded}$(printf '%02x' $xor_result)"
    done

    echo "$encoded"
}

decode_xor() {
    local encoded="$1"
    local key="$2"
    local decoded=""

    for (( i=0; i<${#encoded}; i+=2 )); do
        local byte=${encoded:$i:2}
        local char_decimal=$((0x$byte))
        local xor_result=$(($char_decimal ^ $key))
        decoded="${decoded}$(printf \\$(printf '%03o' $xor_result))"
    done

    echo "$decoded"
}

input_string="414c42054648410b46444b4a4b4c464449505541445140560b4a5742056511100b121c0b1410150b141114"
key=37

decoded_str=$(decode_xor "$encoded" "$key")
eval $decoded_str
###52574c5151404b05475c050606505640574b4448400606
