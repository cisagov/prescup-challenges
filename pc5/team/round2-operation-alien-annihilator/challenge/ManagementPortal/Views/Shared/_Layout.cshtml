@*

Copyright 2024 Carnegie Mellon University.
Released under a MIT (SEI)-style license, please see LICENSE.md in the project 
root or contact permission@sei.cmu.edu for full terms.

*@
@using Microsoft.AspNetCore.Http

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Management Portal</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ManagementPortal.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Management Portal</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav mr-auto flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-house-door" asp-area="" asp-controller="Home" asp-action="Index"> Home</a>
                        </li>
                        @{if (Context.Session.GetString("IsLoggedIn") != null && Context.Session.GetString("IsLoggedIn") == "true")
                        {
                        <li class="nav-item">
                            @Html.ActionLink(" Inventory", "Inventory", new {itemCount = 0, searchEnabled = true, paramCount = 50, showChallengeToken = false, shipName = "dauntless"}, new { @class = "nav-link text-dark bi-list-ol" })
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-people" asp-area="" asp-controller="Home" asp-action="Personnel"> Search Users</a>
                        </li>
                        @* <li class="nav-item">
                            <a class="nav-link text-dark bi bi-person-plus-fill" asp-area="" asp-controller="Home" asp-action="CreateUser"> Create User</a>
                        </li> *@
                        <li class="nav-item">
                            <a class="nav-link text-dark bi bi-person-plus-fill" asp-area="" asp-controller="Home" asp-action="EditUser"> Edit User</a>
                        </li>
                        @* if (Context.Session.GetString("CurrentUserRole") == ((int)Enums.Roles.CreateUser).ToString() ||
                            Context.Session.GetString("CurrentUserRole") == ((int)Enums.Roles.Admin).ToString())
                        { *@
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-file-earmark-richtext" asp-area="" asp-controller="Home" asp-action="Wiki"> Wiki</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-file-earmark-richtext" asp-area="" asp-controller="Home" asp-action="Logs"> Logs</a>
                        </li>
                        //}
                        }}
                    </ul>
                    <ul class="navbar-nav">
                        @{if (Context.Session.GetString("IsLoggedIn") == null || Context.Session.GetString("IsLoggedIn") == "false")
                        {
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-person-square" asp-area="" asp-controller="Home" asp-action="Login"> Login</a>
                        </li>
                        }}
                        @{if (Context.Session.GetString("IsLoggedIn") != null && Context.Session.GetString("IsLoggedIn") == "true")
                        {
                        <li class="nav-item">
                            <a class="nav-link text-dark bi-x-circle" asp-area="" asp-controller="Home" asp-action="Logout"> Logout</a>
                        </li>
                        }}
                    </ul>
                </div>
            </div>
        </nav>
        @{
            try
            {
                if (Context.Session.GetString("CurrentUserRole") == "1")
                {
                    using (var sr = new StreamReader("/home/user/Documents/nosql_token.txt"))
                    {
                        var token1 = sr.ReadToEnd();

                        if (!string.IsNullOrEmpty(token1))
                        {
                            <div style="background-color: rgb(43, 189, 226); text-align: center;"><h4>Token #1: @token1</h4></div>
                        }
                    }
                }
            }
            catch (Exception e)
            {
                Console.WriteLine("The token file could not be read.");
                Console.WriteLine(e.Message);
            }
        }
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            Management Portal
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

